#  @SpringBootApplication 组合注解
#   元注解： 用来修饰注解的注解 @Target:指定注解的作用范围  @Rentention： 指定注解什么时候有效
#   @SpringBootConfiguration: z这个注解就是用来自动配置spring springmvc系相关环境
#   @EnableAutoCongifiguration：开启自动配置 自动配置核心注解 自动配置spring相关环境 自动与项目中引入第三方技术自动配置环境
#   mybatis redis es rabbitmq第三方技术
#   @ComponentScan: 组件扫描 根据注解发挥注解作用，默认扫描当前包及其子包
#   springBoot应用参数 main函数参数  可以动态传递参数
#   两套环境配置公共环境  配置文件拆分 指定本地配置文件 --spring.config.location=
#   java -jar --spring.config.location=绝对路径 xxxxx.jar
#    server.port = 8081
#    那个配置环境生效 spring.profiles.active = dev
#    server.servlet.context-path= /springboot 测试
#    server.servlet.context-path=/springboot_dev
#
#    spring工厂 ：创建对象
#        2种形式
#            1.基于配置文件形式创建对象
#                spring.xml
#                    <bean id="" class= "xxxxxx.ServiceImpl"/>
#            2.基于注解方法创建对象
#                @Component 作用： 就是在工厂中创建对象 通用对象创建注解
#                    @Controller： 创建控制层注解
#                    @Service：    创建业务层注解
#                    @Repository:  创建dao层注解 mybatis
#    SpringBoot 如何创建对象？
#        a.基于注解方法创建对象
#            @Component 作用： 就是在工厂中创建对象 通用对象创建注解 value属性：修改创建对象名称
#            @Controller： 创建控制层注解
#            @Service：    创建业务层注解
#            @Repository:  创建dao层注解 mybatis
#        b.使用配置方式创建对象
#            @Configuration: 修饰范围： 用在类上 =========> spring.xml
#                作用：代表这个类是一个spirngboot中配置类
#            @Bean： 创建对象 相当于 spring.xml  书写bean标签
#            @Configuration
#            public class BeanConfig{
#
#                @Bean 修饰范围在方法上获取注解上，作用：用来将方法返回值交给工厂管理
#                public User user() { 方法名： 推荐返回值首字母小写，代表创建对象在工厂中名称 工厂中的唯一标识
#                    return new User();
#                }
#            }
#    spring框架中属性注入：
#        SET注入 灵活 构造注入 自动注入
#        引用对象类型属性注入 ：
#            @Autowired:spring框架 默认根据类型注入
#            @Resource: javaEE规范  默认根据名称注入 自动根据
#            成员变量上 成员变量 set方法上
#        八种基本类型 + String类型 + 日期类型 + 数组 + 集合set list map array标签 @Value标签
#    SpringBoot中属性注入
##        @Value("${}")、
#        @ConfigurationProperties(prefix="")修饰范围： 用在类上，作用用来将指定前缀 的属性注入到对象中属性名一致属性中
#        注意：这种方式必须提供SET方法